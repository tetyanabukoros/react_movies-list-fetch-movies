{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","React","memo","onAdd","useState","query","setQuery","setMovie","isError","setIsError","loading","setLoading","htmlFor","type","id","placeholder","value","onChange","event","target","cn","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","disabled","App","setMovies","useCallback","prevMovies","some","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"uUAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,OACZC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,gBAAgDD,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAOK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,iBACGD,QADH,IACGA,OADH,EACGA,EAAOM,YACR,uBACA,mBAAGC,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,QAAS,UAAQ,WAAjC,4BC3BKC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,sBCJd,IAAMC,EAA6BC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MACtD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOjB,EAAP,KAAcoB,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KA0BA,OACE,qCACE,uBACEvB,UAAU,aADZ,UAGE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwB,QAAQ,cAAjC,yBAIA,qBAAKxB,UAAU,UAAf,SACE,uBACE,UAAQ,aACRyB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3B,UAAU,kBACV4B,MAAOX,EACPY,SAAU,SAACC,GACTZ,EAASY,EAAMC,OAAOH,OACtBP,GAAW,QAKhBD,GACC,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRyB,KAAK,SACLzB,UAAWgC,IACT,CACE,6BAA8BV,EAC9B,mBAAoBA,IAGxBW,QApES,SAACH,GACpBA,EAAMI,iBACNX,GAAW,GCdR,SAAkBN,GACvB,OAAOkB,MAAM,GAAD,OAHE,2CAGF,cAAiBlB,IAC1BmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDUTC,CAASzB,GACNmB,MAAK,SAAAO,GACA,UAAWA,EACbtB,GAAW,IAEXF,EAAS,CACPf,MAAOuC,EAASC,MAChBvC,YAAasC,EAASE,KACtB3C,OAAQyC,EAASG,QACZ,4DACLvC,QAAQ,8BAAD,OAAgCoC,EAASI,QAChDpC,OAAQgC,EAASI,SAEnB1B,GAAW,OAGd2B,SAAQ,kBAAMzB,GAAW,MAE5BL,EAAS,KAgDC+B,UAAWhC,EAVb,4BAgBF,qBAAKjB,UAAU,UAAf,SACGD,GACC,wBACE,UAAQ,YACR0B,KAAK,SACLzB,UAAU,oBACViD,UAAWlD,EACXkC,QAAS,WACPlB,EAAMhB,GACNoB,EAAS,OAPb,qCAiBR,sBAAKnB,UAAU,YAAY,UAAQ,mBAAnC,UACGD,GACC,oBAAIC,UAAU,QAAd,qBAEDD,GAAS,cAAC,EAAD,CAAWA,MAAOA,aE5GvBmD,EAAM,WACjB,MAA4BlC,mBAAkB,IAA9C,mBAAOP,EAAP,KAAe0C,EAAf,KAEMpC,EAAQqC,uBAAY,SAACrD,GACzBoD,GAAU,SAACE,GACT,OAAIA,EAAWC,MAAK,SAAAC,GAAS,OAAIA,EAAU5C,SAAWZ,EAAMY,UACnD0C,EAGH,GAAN,mBAAWA,GAAX,CAAuBtD,SAExB,IAEH,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWe,MAAOA,UCvB1ByC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.297fd17e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = React.memo(({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    setLoading(true);\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setIsError(true);\n        } else {\n          setMovie({\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster\n              || 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          });\n          setIsError(false);\n        }\n      })\n      .finally(() => setLoading(false));\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                {\n                  'button is-light is-loading': loading,\n                  'button is-light': !loading,\n                },\n              )}\n              onClick={handleSubmit}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled={!movie}\n                onClick={() => {\n                  onAdd(movie);\n                  setMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <h2 className=\"title\">Preview</h2>\n        )}\n        {movie && <MovieCard movie={movie} />}\n\n      </div>\n    </>\n  );\n});\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a3f3afd7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable max-len */\nimport { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = useCallback((movie: Movie) => {\n    setMovies((prevMovies) => {\n      if (prevMovies.some(prevMovie => prevMovie.imdbId === movie.imdbId)) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, movie];\n    });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}